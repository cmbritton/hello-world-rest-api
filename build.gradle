plugins {
    id 'org.springframework.boot' version '2.2.2.RELEASE'
    id 'io.spring.dependency-management' version '1.0.8.RELEASE'
    id 'java'
    id 'idea'
    id 'com.palantir.docker' version '0.22.1'
    id 'com.palantir.docker-compose' version '0.22.1'
    id 'com.palantir.docker-run' version '0.22.1'
}

// build trigger

group = 'com.cbritton'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

idea {
    module {
        downloadJavadoc = true
    }
}

ext {
    set('springCloudVersion', "Hoxton.SR1")
}

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    runtimeOnly 'com.h2database:h2'
    implementation 'org.springframework.cloud:spring-cloud-starter-sleuth'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    implementation 'com.amazonaws:aws-xray-recorder-sdk-spring:2.3.0'
    implementation 'com.amazonaws:aws-xray-recorder-sdk-apache-http:2.3.0'
    implementation 'javax.xml.bind:jaxb-api'
    implementation 'com.sun.xml.bind:jaxb-impl:2.3.0'
    implementation 'org.glassfish.jaxb:jaxb-runtime'
    implementation 'javax.activation:activation:1.1.1'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation 'io.springfox:springfox-swagger2:2.9.2'
    implementation 'io.springfox:springfox-spi:2.9.2'
    implementation 'io.springfox:springfox-swagger-ui:2.9.2'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

docker {
    name 'cmbritton/hello-world-rest-api'
    files 'build'
}

dockerRun {
    name 'hello-world-rest-api'
    image 'cmbritton/hello-world-rest-api:latest'
    ports '8100:8100'
    daemonize true
}

test {
    useJUnitPlatform()
}
